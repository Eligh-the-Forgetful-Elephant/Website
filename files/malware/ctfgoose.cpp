#include <X11/Xlib.h>
#include <X11/Xutil.h>
#include <cstdlib>
#include <ctime>
#include <unistd.h>
#include <iostream>

// Function to display an image and move it around
void display_goose(Display* display, Window window, GC gc, int screen_width, int screen_height) {
    int goose_width = 50, goose_height = 50;
    int x = rand() % (screen_width - goose_width);
    int y = rand() % (screen_height - goose_height);
    XSetForeground(display, gc, WhitePixel(display, 0));
    XFillRectangle(display, window, gc, x, y, goose_width, goose_height);  // Simple rectangle as placeholder
    XFlush(display);
    usleep(50000);  // Wait for 50ms
    XSetForeground(display, gc, BlackPixel(display, 0));
    XFillRectangle(display, window, gc, x, y, goose_width, goose_height);  // Erase previous rectangle
    XFlush(display);
}

int main() {
    srand(static_cast<unsigned int>(time(0)));

    // Open X11 display
    Display* display = XOpenDisplay(nullptr);
    if (display == nullptr) {
        std::cerr << "Unable to open X11 display.\n";
        return 1;
    }

    // Create a simple X11 window
    int screen = DefaultScreen(display);
    int screen_width = DisplayWidth(display, screen);
    int screen_height = DisplayHeight(display, screen);
    Window window = XCreateSimpleWindow(display, RootWindow(display, screen), 0, 0, screen_width, screen_height, 1, BlackPixel(display, screen), WhitePixel(display, screen));

    // Select input events
    XSelectInput(display, window, ExposureMask | KeyPressMask);
    XMapWindow(display, window);

    // Create a graphics context
    GC gc = XCreateGC(display, window, 0, nullptr);

    // Main loop: moving the goose image
    bool running = true;
    while (running) {
        XEvent event;
        if (XPending(display)) {
            XNextEvent(display, &event);
            if (event.type == KeyPress) {
                running = false;
            }
        }
        display_goose(display, window, gc, screen_width, screen_height);  // Display and move the goose
    }

    // Cleanup
    XFreeGC(display, gc);
    XDestroyWindow(display, window);
    XCloseDisplay(display);

    return 0;
}

